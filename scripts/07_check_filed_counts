#!/usr/bin/perl

if ( ! -f "scripts/options.pl" ) { 
    print "\nPlease cd to the correct directory. It is assumed you are in a data directory next to a OpenCalAccess directory.\n\n";
    exit(1);
}

require "../OpenCalAccess/options.pl";

foreach (@ARGV) {
    $arg = $_;

    if ($arg eq "-v") { $verbose = 1; }
    if ($arg eq "-dryrun") { $dryrun = 1; }
}

$myV = &option("mysql")." -u ".&option("dbUser")." --password=".&option("dbPwd")." -vvv --force ".&option("dbName");
$myQ = &option("mysql")." -u ".&option("dbUser")." --password=".&option("dbPwd")." --skip-column-names --force ".&option("dbName");

$sql = <<'EOF';

drop table if exists filings_counted;

create table filings_counted (
     filing_id int primary key,
     filing_type int,
     cvr2_campaign_disclosure int default 0,
     cvr2_lobby_disclosure int default 0,
     cvr2_registration int default 0,
     cvr2_so int default 0,
     cvr3_verification_info int default 0,
     cvr_campaign_disclosure int default 0,
     cvr_e530 int default 0,
     cvr_lobby_disclosure int default 0,
     cvr_registration int default 0,
     cvr_so int default 0,
     debt int default 0,
     expn int default 0,
     f495p2 int default 0,
     f501_502 int default 0,
     f690p2 int default 0,
     hdr int default 0,
     latt int default 0,
     lccm int default 0,
     lemp int default 0,
     lexp int default 0,
     loan int default 0,
     lobby_amendments int default 0,
     lobbyist_firm_employer1 int default 0,
     lobbyist_firm_employer2 int default 0,
     loth int default 0,
     lpay int default 0,
     rcpt int default 0,
     received_filings int default 0,
     s401 int default 0,
     s496 int default 0,
     s497 int default 0,
     s498 int default 0,
     smry int default 0,
     splt int default 0,
     text_memo int default 0,
     filing_sum int default 0);

-- Insert filing_id rows for the filings that should be there.
--
insert into filings_counted (filing_id, filing_type) select filing_id, filing_type from filings;

drop table if exists filers_counted;

create table filers_counted (
     filer_id varchar(30) primary key,
     filer_id_entry char(1),
     ballot_measures int default 0,
     cvr_campaign_disclosure int default 0,
     cvr_lobby_disclosure int default 0,
     cvr_registration int default 0,
     cvr_so int default 0,
     efs_filing_log int default 0,
     f501_502 int default 0,
     filer_acronyms int default 0,
     filer_address int default 0,
     filer_ethics_class int default 0,
     filer_interests int default 0,
     filer_to_filer_type int default 0,
     filer_xref int default 0,
     filername int default 0,
     filers int default 0,
     lobbying_chg_log int default 0,
     lobbyist_contributions1 int default 0,
     lobbyist_contributions2 int default 0,
     lobbyist_contributions3 int default 0,
     received_filings int default 0,
     filer_sum int default 0);

-- Insert filer_id rows for the filers that should be there.
--
insert into filers_counted (filer_id, filer_id_entry) select filer_id, 'Y' from filers;

EOF

open F, "tableCols.txt";
while (<F>) {
    chomp;
    $line = $_;
    @p = split ' ', $line;
    if ($lastLine eq "" && $p[0] ne "filer_filings") {
        $table = $p[0];
    } else {
        if ($p[0] eq "filing_id") { push @filingsTables, $table; }
        if ($p[0] eq "filer_id") { push @filersTables, $table; }
    }
    $lastLine = $line;
}

if ( ! defined($dryrun)) {
    open M, "| ".$myV;
} else {
    open M, "| cat -";
}
print M $sql;
close M;

if ( ! defined($dryrun)) {
    open M, "| ".$myV;
} else {
    open M, "| cat -";
}

foreach (@filingsTables) {
    print M "insert ignore into filings_counted (filing_id) select filing_id from ".$_.";\n";
}

foreach (@filingsTables) {

    $table = $_;
    print "filings, ".$table."...\n";

    $cmd = "echo \"select filing_id, count(*) from ".$table." group by filing_id;\" | ".$myQ;
    @ids = `$cmd`;
    chomp(@ids);
    foreach (@ids) {
        ($id, $count) = split '\t', $_;
        print M "update filings_counted set ".$table." = ".$count." where filing_id = ".$id.";\n";
    }
}

print "Done.\n";

close M;

if ( ! defined($dryrun)) {
    open M, "| ".$myV;
} else {
    open M, "| cat -";
}

print M "update filings_counted set filing_sum = ".(join ' + ', @filingsTables).";\n";

foreach (@filersTables) {
    print M "insert ignore into filers_counted (filer_id) select filer_id from ".$_.";\n";
}

foreach (@filersTables) {

    $table = $_;
    print "filers, ".$table."...\n";

    $cmd = "echo \"select filer_id, count(*) from ".$table." group by filer_id;\" | ".$myQ;
    @ids = `$cmd`;
    chomp(@ids);
    foreach (@ids) {
        ($id, $count) = split '\t', $_;
        print M "update filers_counted set ".$table." = ".$count." where filer_id = '".$id."';\n";
    }
}

print "Done.\n";

close M;

if ( ! defined($dryrun)) {
    open M, "| ".$myV;
} else {
    open M, "| cat -";
}

print M "update filers_counted set filer_sum = ".(join ' + ', @filersTables).";\n";

close M;

exit(0);
