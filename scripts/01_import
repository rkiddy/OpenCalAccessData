#!/usr/bin/perl

if ( ! -f "scripts/options.pl" ) { 
    print "\nPlease cd to the correct directory. It is assumed you are in a data directory next to a OpenCalAccess directory.\n\n";
    exit(1);
}

require "../OpenCalAccess/options.pl";

sub tableNameFromFile {
    @p = split '\.', $_;
    local $table = lc($p[0]);
    return $table;
}

if (scalar(@ARGV) == 0) {
    print "\nusage: ./01_import [ -dryrun ] [ -v ] [ -etseq ] [ -all | <files> ]\n\n";
    exit(0);
}

$myVForce = "/opt/local/bin/mysql5 -u ".&option("dbUser")." --password=".&option("dbPwd")." -vvv --force ".&option("dbName");
$myV = "/opt/local/bin/mysql5 -u ".&option("dbUser")." --password=".&option("dbPwd")." -vvv ".&option("dbName");
$myQ = "/opt/local/bin/mysql5 -u ".&option("dbUser")." --password=".&option("dbPwd")." --skip-column-names ".&option("dbName");

my @files = ();

for ($idx = 0; $idx < scalar(@ARGV); $idx++) {
    $arg = $ARGV[$idx];

    if ($arg eq "-dryrun") { $dryrun = 1; }
    if ($arg eq "-all") { $allFiles = 1; }
    if ($arg eq "-etseq") { $etseq = 1; }
    if ($arg =~ /\.TSV$/) { push @files, $arg; }
    if ($arg eq "-v") { $verbose = 1; }

    if ($arg =~ /^\-/ && $arg ne "-dryrun" && $arg ne "-all" && $arg ne "-etseq" && $arg ne "-v") {
        print "\nERROR: Mispelled option? Aborting.\n\n";
        exit(1);
    }
}

if (defined($allFiles)) {
    $cmd = "( cd ".&option("dataDir")." ; /bin/ls -1 *_CD.TSV )";
    print "cmd: \"".$cmd."\"\n";
    @files = `$cmd`;
    chomp(@files);
}

if ( ! defined($allFiles) && scalar(@files) == 0) {
    print "\nNo files...\n\n";
    exit(0);
}

if (defined($dryrun)) {
    open M, "| /bin/cat -";
} else {
    open M, "| ".$myV;
}

foreach (@files) {

     $file = lc($_);

     # Given "TEXT_MEMO_CD.TSV" in the data directory, this will now be "text_memo_cd".
     #
     $table = &tableNameFromFile($file);

     if ( ! defined($created{$table})) {

         $created{$table} = 1;

         if ( ! -f &option("dataDir")."/".$file ) {
             print "\nERROR: Something wrong? Given a file that does not exist. Aborting.\n\n";
             exit(1);
         }

         print M "-- file: ".$file."\n";

         print M "-- table: ".$table."\n";

         $cmd = "head -1 ".&option("dataDir")."/".$file;
         $topLine = `$cmd`;
         chomp($topLine);

         @cols = split '\s', $topLine;

         $sql = "create table ".$table." (";
         $sql .= "pk int primary key,";
         foreach (@cols) { $sql .= lc($_)." blob,"; }
         $sql =~ s/,$//;
         $sql .= ");";
         print M "drop table if exists ".$table.";\n";
         print M $sql."\n\n";
     }
}

close M;

foreach (@files) {

    $file = lc($_);

    # Given "TEXT_MEMO_CD.TSV" in the data directory, this will now be "text_memo_cd".
    #
    $table = &tableNameFromFile($file);

    if (defined($verbose)) { print "table: \"".$table."\"\n"; }

    $pk = 1;

    if (defined($etseq)) {
        $fileExp = $file;
        $fileExp =~ s/_cd/_cd\.\*/;
        $fileExp = uc($fileExp);
        if (defined($dryrun)) {
            print "open SQL_IN, \"/bin/cat ".&option("dataDir")."/".$file." ".&option("dataDir")."/".$fileExp." |\"\n";
        } else {
            open SQL_IN, "/bin/cat ".&option("dataDir")."/".$file." ".&option("dataDir")."/".$fileExp." |";
        }
    } else {
        if (defined($dryrun)) {
            print "open SQL_IN, ".&option("dataDir")."/".$file."\n";
        } else {
            open SQL_IN, &option("dataDir")."/".$file;
        }
    }

    if ( ! defined($dryrun)) {

        open SQL_OUT, ">".&option("tmpDir")."/".$file;

        if ( defined($create)) {
            $first = <SQL_IN>;
            print SQL_OUT "pk\t".$first;
        }

        while (<SQL_IN>) {
            $line = $_;
            $line =~ s/ *\t/\t/g;
            print SQL_OUT $pk."\t".$line;
            $pk++;
        }

        close SQL_IN;
        close SQL_OUT;
    }

    if (defined($dryrun)) {
        open M, "| /bin/cat -";
    } else {
        open M, "| ".$myVForce;
    }

    print M "set max_error_count=65535;\n";

    $sql = "load data local infile '".&option("tmpDir")."/".$file."' into table ".$table." ".
           "fields terminated by '\\t' lines terminated by '\\r\\n' ignore 1 lines;\n";

    print M $sql;
    print M "show warnings;\n";

    close M;

    if ( ! defined($demoOnly)) { rmdir &option("tmpDir")."/".$file; }
}

print "\nDone!\n";

exit(0);
