#!/usr/bin/perl

require "scripts/options.pl";

for (my $idx = 0; $idx < scalar(@ARGV); $idx++) {
    $arg = $ARGV[$idx];

    if ($arg eq "-dryrun") { $dryrun = 1; }

    if ($arg eq "-v") { $verbose = 1; }

    if ($arg eq "-all") { $allTables = 1; }

    if ($arg eq "-date") { $importDate = $ARGV[$idx+1]; $idx++; next; }

    if ($arg eq "-inc") { $inc = $ARGV[$idx+1]; $idx++; next; }

    if ($arg eq "-pk") { $pkOnly = $ARGV[$idx+1]; $idx++; next; }

    if ($arg !~ /^\-/) { $tables{$arg} = 1; }
}

if (scalar(@ARGV) == 0 || ! defined($importDate)) {
    print "\nusage: ./03_create_final -date <YYYYMMDD> [ -v ] [ -dryrun ] [ -inc <#> ] ( -all | <tables> )\n\n";
    exit(0);
}

if ( ! defined($allTables) && (scalar(keys %tables)) == 0) {
    print "\nusage: ./03_create_final -date <YYYYMMDD> [ -v ] [ -dryrun ] [ -inc <#> ] ( -all | <tables> ) - please use -all or a list of tables\n\n";
    exit(0);
}

if (defined($allTables) && (scalar(keys %tables)) > 0) {
    print "\nusage: ./03_create_final -date <YYYYMMDD> [ -v ] [ -dryrun ] [ -inc <#> ] ( -all | <tables> ) - do not use -all and list files on the command line\n\n";
    exit(0);
}

&set_up_options($importDate);

if ( ! defined($inc)) { $inc = 10000; }

&readTableCols();

if (defined($allTables)) { %tables = %tablesFound; }

print "\ntables count = ".(scalar(keys %tables))."\n\n";

foreach (sort keys %tables) {

    $table = $_;

    if (defined($dryrun)) {
        open M, "| cat";
    } else {
        open M, "| ".$myV;
    }

    print M "set max_error_count = 65535;\n";

    print M "SET GLOBAL sql_mode='ONLY_FULL_GROUP_BY,NO_ZERO_IN_DATE,NO_ZERO_DATE,".
                                 "ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\n";

    $cmd = "echo \"select max(pk) from ".$table."_cd;\" | ".$myQ;
    $pk = `$cmd`;
    chomp($pk);

    print M "drop table if exists ".$table.";\n";

    undef @cols;

    $idx = 0;
    while (defined($columns{$table}[$idx])) {
        $type = $colTypes{$table}[$idx];
        if ($type eq "date" || $type eq "datetime") { $type = "varchar(100)"; }
        push @cols, "    ".$columns{$table}[$idx]." ".$type;
        $idx++;
    }

    $sql = "create table ".$table." (\n";
    $sql .= join ",\n", @cols;
    $sql .= "\n);\n";

    print M $sql;

    if (defined($verbose)) { print M "show warnings;\n"; }

    undef @cols;

    $idx = 0;
    while (defined($columns{$table}[$idx])) {
        if ($table ne "filer_filings" || $columns{$table}[$idx] ne "high_amend_id") {
            push @cols, "    ".$columns{$table}[$idx];
        }
        $idx++;
    }


    if (defined($pkOnly)) {

        print M "insert into ".$table." (\n";
        print M (join ",\n", @cols)."\n";
        print M ") select \n";
        print M (join ",\n", @cols)."\n";
        print M "from ".$table."_cd ";
        print M "where pk = ".$pkOnly.";\n";

        print M "show warnings;\n";

    } else {

        for ($idx = 0; $idx <= $pk; $idx = $idx + $inc) {

            print M "insert into ".$table." (\n";
            print M (join ",\n", @cols)."\n";
            print M ") select \n";
            print M (join ",\n", @cols)."\n";
            print M "from ".$table."_cd ";
            print M "where pk > ".$idx." and pk <= ".($idx+$inc).";\n";

            print M "show warnings;\n";
        }
    }

    $idx = 0;
    while (defined($columns{$table}[$idx])) {
        if ($colTypes{$table}[$idx] eq "date") {
            print M "alter table ".$table." add index(".$columns{$table}[$idx]."(10));\n";
        }
        if ($colTypes{$table}[$idx] eq "datetime") {
            print M "alter table ".$table." add index(".$columns{$table}[$idx]."(20));\n";
        }
        if ($columns{$table}[$idx] eq "filing_id") {
            print M "alter table ".$table." add index(filing_id);\n";
        }
        if ($columns{$table}[$idx] eq "amend_id") {
            print M "alter table ".$table." add index(amend_id);\n";
        }
        if ($columns{$table}[$idx] eq "filer_id") {
            print M "alter table ".$table." add index(filer_id);\n";
        }
        if ($columns{$table}[$idx] =~ /_naml$/) {
            print M "alter table ".$table." add index(".$columns{$table}[$idx]."(20));\n";
        }
        $idx++;
    }

    close M;
}

exit(0);

