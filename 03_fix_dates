#!/usr/bin/perl

require "scripts/options.pl";

for ($idx = 0; $idx < scalar(@ARGV); $idx++) {
    $arg = $ARGV[$idx];

    if ($arg eq "-all") { $allTables = 1; }

    if ($arg eq "-dryrun") { $dryrun = 1; }

    if ($arg eq "-date") { $importDate = $ARGV[$idx+1]; $idx++; next; }

    if ($arg !~ /^\-/) { $tables{$arg} = 1; }
}

if (scalar(@ARGV) == 0 || ! defined($importDate) || ( ! defined($allTables) && scalar(%tables) == 0)) {
    print "\nusage: ./05_fix_dates -date <YYYYMMDD> [ -dryrun ] ( -all | <files> )\n\n";
    exit(0);
}

if (&db_exists(&option("dbName")."_".$importDate) != 1) { 
    print "\nERROR: database \"".&option("dbName")."_".$importDate."\" does not exist.\n";
    exit(1);
}

open T, "scripts/tableCols.txt";
while (<T>) {
    chomp;
    $line = $_;

    if ($line ne "" && $line !~ / /) {
        $tableName = $line;

        $sql = "show index from ".$tableName.";";
        $cmd = "echo \"".$sql."\" | ".$myQ."_".$importDate;
        foreach (`$cmd`) {
            $row = $_;
            @p = split '\t', $row;
            $indexes{$tableName}{$p[4]} = 1;
        }
    }

    if ($line =~ / date$/) { 

        $column = $line;
        $column =~ s/ date$//;

        if (defined($allTables) || defined($tables{$tableName})) {

            print "fix date: table: \"".$tableName."\", column: \"".$column."\"\n";

            if ( ! defined($alreadyCreated{$tableName."_2"})) {

                open M, "| ".$myV."_".$importDate;
                print M "create table ".$tableName."_2 (pk int primary key, ".$column." date);\n";

                print M "insert into ".$tableName."_2 (pk) select pk from ".$tableName.";\n";
                close M;

                $cmd = "echo \"select max(pk) from ".$tableName.";\" | ".$myQ."_".$importDate;
                $pk = `$cmd`;
                chomp($pk);

                print "table: ".$tableName.", max pk = ".$pk."\n";

                $alreadyCreated{$tableName."_2"} = 1;

            } else {
                push @sql, "alter table ".$tableName."_2 add column ".$column." date;";
                push @sql, "update ".$tableName."_2 set ".$column." = NULL;";
            }

            for ($idx = 0; $idx < $pk; $idx = $idx + 10000) {

                push @sql, "update ".$tableName." t1, ".$tableName."_2 t2 ".
                           "set t2.".$column." = cast(str_to_date(t1.".$column.", '%m/%d/%Y %r') as date) ".
                           "where t1.pk = t2.pk and t1.pk >= ".$idx." and t1.pk < ".($idx+10000).";";

                push @sql, "update ".$tableName." t1, ".$tableName."_2 t2 ".
                           "set t1.".$column." = t2.".$column." ".
                           "where t1.pk = t2.pk and t2.".$column." is not NULL and ".
                           "t1.pk >= ".$idx." and t1.pk < ".($idx+10000).";";
            }

            push @sql, "update ".$tableName." set ".$column." = NULL where ".$column." = '0000-00-00';";

            push @drops, "drop table if exists ".$tableName."_2;";

            push @counts, "select count(*) from ".$tableName." where ".$column." != '' and ".$column." not rlike '^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]';";
        }
    }

    if ($line =~ / datetime$/) {

        $column = $line;
        $column =~ s/ datetime$//;

        if (defined($allTables) || defined($tables{$tableName})) {

            print "fix datetime: table: \"".$tableName."\", column: \"".$column."\"\n";

            if ( ! defined($indexes{$tableName})) {
                $sql = "show index from cvr_campaign_disclosure;";
                $cmd = "echo \"".$sql."\" | ".$myQ."_".$importDate;
                foreach (`$cmd`) {
                    @p = split '\t', $_;
                    $indexes{$tableName}{$p[4]} = 1;
                }
            }

            if ( ! defined($indexes{$tableName}{$column})) {
                push @sql, "alter table ".$tableName." add index(".$column."(20));";
            }

            push @sql, "update ".$tableName.
                    " set ".$column." = concat(substr(".$column.",7,4), \"-\", substr(".$column.",1,2),\"-\", substr(".$column.",4,2), substr(".$column.", 11)) ".
                    "where ".$column." rlike '^[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9] [AP]M\$';";

            push @sql, "update ".$tableName.
                    " set ".$column." = concat(substr(".$column.",7,4), \"-\", substr(".$column.",1,2),\"-\", substr(".$column.",4,2), \" 0\", substr(".$column.", 12)) ".
                    "where ".$column." rlike '^[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9]:[0-9][0-9]:[0-9][0-9] [AP]M\$';";

            push @sql, "update ".$tableName.
                    " set ".$column." = concat(substr(".$column.",6,4), \"-\", substr(".$column.",1,2), \"-0\", substr(".$column.",4,1), substr(".$column.", 10)) ".
                    "where ".$column." rlike '^[0-9][0-9]/[0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9] [AP]M\$';";

            push @sql, "update ".$tableName.
                    " set ".$column." = concat(substr(".$column.",6,4), \"-\", substr(".$column.",1,2), \"-0\", substr(".$column.",4,1), \" 0\", substr(".$column.", 11)) ".
                    "where ".$column." rlike '^[0-9][0-9]/[0-9]/[0-9][0-9][0-9][0-9] [0-9]:[0-9][0-9]:[0-9][0-9] [AP]M\$';";

            push @sql, "update ".$tableName.
                    " set ".$column." = concat(substr(".$column.",6,4), \"-0\", substr(".$column.",1,1), \"-\", substr(".$column.",3,2), substr(".$column.", 10)) ".
                    "where ".$column." rlike '^[0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9] [AP]M\$';";
    
            push @sql, "update ".$tableName.
                    " set ".$column." = concat(substr(".$column.",6,4), \"-0\", substr(".$column.",1,1), \"-\", substr(".$column.",3,2), \" 0\", substr(".$column.", 11)) ".
                    "where ".$column." rlike '^[0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9]:[0-9][0-9]:[0-9][0-9] [AP]M\$';";

            push @sql, "update ".$tableName.
                    " set ".$column." = concat(substr(".$column.",5,4), \"-0\", substr(".$column.",1,1), \"-0\", substr(".$column.",3,1), substr(".$column.", 9)) ".
                    "where ".$column." rlike '^[0-9]/[0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9] [AP]M\$';";

            push @sql, "update ".$tableName.
                    " set ".$column." = concat(substr(".$column.",5,4), \"-0\", substr(".$column.",1,1), \"-0\", substr(".$column.",3,1), \" 0\", substr(".$column.", 10)) ".
                    "where ".$column." rlike '^[0-9]/[0-9]/[0-9][0-9][0-9][0-9] [0-9]:[0-9][0-9]:[0-9][0-9] [AP]M\$';";

            #
            # Now I have the date like: 2012-02-22 01:14:33 PM
            #
            # MySQL form would not have the AM/PM and needs to be on a 24-hour clock.
            #
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'00',substr(".$column.",14,6)) where ".$column." like '% 12:00:00 AM';";
            push @sql, "update ".$tableName." set ".$column." = substr(".$column.",1,19) where ".$column." like '% AM';";
            push @sql, "update ".$tableName." set ".$column." = substr(".$column.",1,19) where ".$column." like '% 12:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'13',substr(".$column.",14,6)) where ".$column." like '% 01:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'14',substr(".$column.",14,6)) where ".$column." like '% 02:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'15',substr(".$column.",14,6)) where ".$column." like '% 03:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'16',substr(".$column.",14,6)) where ".$column." like '% 04:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'17',substr(".$column.",14,6)) where ".$column." like '% 05:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'18',substr(".$column.",14,6)) where ".$column." like '% 06:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'19',substr(".$column.",14,6)) where ".$column." like '% 07:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'20',substr(".$column.",14,6)) where ".$column." like '% 08:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'21',substr(".$column.",14,6)) where ".$column." like '% 09:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'22',substr(".$column.",14,6)) where ".$column." like '% 10:% PM';";
            push @sql, "update ".$tableName." set ".$column." = concat(substr(".$column.",1,11),'23',substr(".$column.",14,6)) where ".$column." like '% 11:% PM';";

            push @counts, "select count(*) from ".$tableName." where ".$column." not rlike '^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] ';";
        }
    }

    $last = $line;
}

if ( ! defined($dryrun)) {
    open M, "| ".$myV."_".$importDate;
} else {
    open M, "| cat -";
}

foreach (@sql) { print M $_."\n"; }

close M;

open M, "| ".$myV."_".$importDate;

foreach (@drops) { print M $_."\n"; }
foreach (@counts) { print M $_."\n"; }

close M;

exit(0);

